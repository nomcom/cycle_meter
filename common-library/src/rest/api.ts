/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * REST_API
 * BackEndのREST API仕様です
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
/**
 * Commentオブジェクト
 */
export type MarkerById200Comment = {
  /** コメント文字列 */
  comment?: string;
  /** ID */
  id?: number;
};

/**
 * Markerオブジェクト
 */
export type MarkerById200 = {
  /** メートル単位で測定された、場所の不確実性の半径 */
  accuracy?: number;
  /** 高度(altitude) */
  altitude?: number;
  /** 高度値の精度 (メートル単位) */
  altitudeAccuracy?: number;
  /** Commentオブジェクト */
  comment?: MarkerById200Comment;
  /** このデバイスの水平方向の移動方向。真北からコンパスを中心に時計回りに度数で測定されます。したがって、北は 0 度、東は 90 度、南は 180 度などです */
  heading?: number;
  /** ID */
  id: number;
  /** 画像ID */
  imageId?: string;
  /** 緯度(latitude) */
  latitude?: number;
  /** 経度(longitude) */
  longitude?: number;
  /** デバイスの瞬間速度 (メートル/秒) */
  speed?: number;
  /** 登録日付(Unixミリ秒) */
  timestamp?: number;
};

/**
 * Commentオブジェクト
 */
export type MarkersGet200Comment = {
  /** コメント文字列 */
  comment?: string;
  /** ID */
  id?: number;
};

/**
 * Markerオブジェクト
 */
export type MarkersGet200 = {[key: string]: {
  /** メートル単位で測定された、場所の不確実性の半径 */
  accuracy?: number;
  /** 高度(altitude) */
  altitude?: number;
  /** 高度値の精度 (メートル単位) */
  altitudeAccuracy?: number;
  /** Commentオブジェクト */
  comment?: MarkersGet200Comment;
  /** このデバイスの水平方向の移動方向。真北からコンパスを中心に時計回りに度数で測定されます。したがって、北は 0 度、東は 90 度、南は 180 度などです */
  heading?: number;
  /** ID */
  id: number;
  /** 画像ID */
  imageId?: string;
  /** 緯度(latitude) */
  latitude?: number;
  /** 経度(longitude) */
  longitude?: number;
  /** デバイスの瞬間速度 (メートル/秒) */
  speed?: number;
  /** 登録日付(Unixミリ秒) */
  timestamp?: number;
}};

export type MarkersGetParams = {
/**
 * 順序付け対象
 */
orderBy?: string;
/**
 * 開始(Unixミリ秒)
 */
startAt?: number;
/**
 * 終了(Unixミリ秒)
 */
endAt?: number;
/**
 * 取得データ数
 */
limitToFirst?: number;
};

/**
 * 生成結果ユニークID
 */
export type MarkerCreate200 = {
  /** ユニークID */
  name: string;
};

/**
 * Commentオブジェクト
 */
export type MarkerCreateBodyComment = {
  /** コメント文字列 */
  comment?: string;
  /** ID */
  id?: number;
};

export type MarkerCreateBody = {
  /** メートル単位で測定された、場所の不確実性の半径 */
  accuracy?: number;
  /** 高度(altitude) */
  altitude?: number;
  /** 高度値の精度 (メートル単位) */
  altitudeAccuracy?: number;
  /** Commentオブジェクト */
  comment?: MarkerCreateBodyComment;
  /** このデバイスの水平方向の移動方向。真北からコンパスを中心に時計回りに度数で測定されます。したがって、北は 0 度、東は 90 度、南は 180 度などです */
  heading?: number;
  /** 画像ID */
  imageId?: string;
  /** 緯度(latitude) */
  latitude?: number;
  /** 経度(longitude) */
  longitude?: number;
  /** デバイスの瞬間速度 (メートル/秒) */
  speed?: number;
  /** 登録日付(Unixミリ秒) */
  timestamp: number;
};





  /**
 * Marker登録APIです
 * @summary Marker登録API
 */
export const markerCreate = <TData = AxiosResponse<MarkerCreate200>>(
    markerCreateBody: MarkerCreateBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/marker/create.json`,
      markerCreateBody,options
    );
  }

/**
 * Marker取得APIです
 * @summary Marker取得API
 */
export const markersGet = <TData = AxiosResponse<MarkersGet200>>(
    params?: MarkersGetParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/marker/create.json`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * Marker取得API(ID指定)です
 * @summary Marker取得API(ID指定)
 */
export const markerById = <TData = AxiosResponse<MarkerById200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/marker/select.json`,options
    );
  }

export type MarkerCreateResult = AxiosResponse<MarkerCreate200>
export type MarkersGetResult = AxiosResponse<MarkersGet200>
export type MarkerByIdResult = AxiosResponse<MarkerById200>
